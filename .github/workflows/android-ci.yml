name: Android CI

on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-versions: [ 8, 9, 10, 11, 12 ]
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-versions }}
    
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Test with Gradle
      run: ./gradlew test
      
  coverage-scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Check with Gradle
      run: ./gradlew check
      
    - name: Upload coverage report
      run: bash <(curl -s https://codecov.io/bash)

    - name: Execute sonar scan
      run: ./gradlew sonarqube -Dbuild.number=$GITHUB_RUN_NUMBER
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  deploy-snapshot:
    needs: coverage-scan
    if: "!startsWith(github.ref, 'refs/tags')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Deploy snapshot with Gradle
      run: ./gradlew artifactoryPublish -Dsnapshot=true -Dbintray.user=${{ secrets.BINTRAY_USER }} -Dbintray.key=${{ secrets.BINTRAY_KEY }} -Dbuild.number=$GITHUB_RUN_NUMBER
      
  deploy-release:
    needs: coverage-scan
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Deploy release with Gradle
      run: ./gradlew bintrayUpload -Dbintray.user=${{ secrets.BINTRAY_USER }} -Dbintray.key=${{ secrets.BINTRAY_KEY }} -Dsigning.pass=${{ secrets.SIGN_PASS }} -Dbuild.number=$GITHUB_RUN_NUMBER
